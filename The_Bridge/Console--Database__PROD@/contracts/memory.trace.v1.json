{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Agent Memory Trace Event",
  "description": "Event emitted when agents complete runs for memory banking",
  "type": "object",
  "required": ["headers", "payload"],
  "properties": {
    "headers": {
      "type": "object",
      "required": [
        "world",
        "division",
        "capability",
        "version",
        "tenant_id",
        "occurred_at",
        "payload_schema",
        "agent_run_id"
      ],
      "properties": {
        "world": {
          "type": "string",
          "const": "Continuum_Overworld"
        },
        "division": {
          "type": "string",
          "enum": ["Orion", "MAR", "MCP", "SCIP", "Pantheon", "The_Bridge"]
        },
        "capability": {
          "type": "string",
          "enum": ["Reasoner", "Predictor", "Broker", "Orchestrator", "Controller"]
        },
        "role": {
          "type": "string"
        },
        "qualifier": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "pattern": "^v\\d+\\.\\d+\\.\\d+$"
        },
        "tenant_id": {
          "type": "string",
          "minLength": 1
        },
        "project_tag": {
          "type": "string"
        },
        "agent_run_id": {
          "type": "string",
          "description": "Unique identifier for this agent run"
        },
        "occurred_at": {
          "type": "string",
          "format": "date-time"
        },
        "payload_schema": {
          "type": "string",
          "const": "memory.trace.v1"
        },
        "correlation_id": {
          "type": "string"
        },
        "causation_id": {
          "type": "string"
        }
      }
    },
    "payload": {
      "type": "object",
      "required": ["agent_name", "status", "started_at"],
      "properties": {
        "agent_name": {
          "type": "string",
          "description": "Name of the agent that ran"
        },
        "agent_type": {
          "type": "string",
          "description": "Type/category of agent"
        },
        "parent_run_id": {
          "type": "string",
          "description": "Parent agent run ID for nested calls"
        },
        "status": {
          "type": "string",
          "enum": ["success", "error", "timeout", "cancelled"]
        },
        "started_at": {
          "type": "string",
          "format": "date-time"
        },
        "ended_at": {
          "type": "string",
          "format": "date-time"
        },
        "duration_ms": {
          "type": "integer",
          "minimum": 0
        },
        "input": {
          "type": "object",
          "description": "Input provided to the agent",
          "properties": {
            "prompt": {
              "type": "string"
            },
            "context": {
              "type": "object"
            },
            "parameters": {
              "type": "object"
            }
          }
        },
        "output": {
          "type": "object",
          "description": "Output produced by the agent",
          "properties": {
            "response": {
              "type": "string"
            },
            "data": {
              "type": "object"
            },
            "artifacts": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "uri": {
                    "type": "string"
                  },
                  "size_bytes": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "tools": {
          "type": "array",
          "description": "Tools/functions called during the run",
          "items": {
            "type": "object",
            "required": ["tool_name", "started_at"],
            "properties": {
              "tool_name": {
                "type": "string"
              },
              "tool_type": {
                "type": "string",
                "enum": ["api", "function", "query", "command", "llm"]
              },
              "started_at": {
                "type": "string",
                "format": "date-time"
              },
              "ended_at": {
                "type": "string",
                "format": "date-time"
              },
              "duration_ms": {
                "type": "integer",
                "minimum": 0
              },
              "input": {
                "type": "object"
              },
              "output": {
                "type": "object"
              },
              "status": {
                "type": "string",
                "enum": ["success", "error", "timeout"]
              },
              "error_message": {
                "type": "string"
              }
            }
          }
        },
        "model_config": {
          "type": "object",
          "description": "LLM configuration used",
          "properties": {
            "provider": {
              "type": "string",
              "enum": ["openai", "anthropic", "azure", "bedrock", "vertex", "local"]
            },
            "model": {
              "type": "string"
            },
            "temperature": {
              "type": "number",
              "minimum": 0,
              "maximum": 2
            },
            "max_tokens": {
              "type": "integer"
            },
            "top_p": {
              "type": "number"
            },
            "frequency_penalty": {
              "type": "number"
            },
            "presence_penalty": {
              "type": "number"
            }
          }
        },
        "tokens_used": {
          "type": "object",
          "properties": {
            "prompt": {
              "type": "integer",
              "minimum": 0
            },
            "completion": {
              "type": "integer",
              "minimum": 0
            },
            "total": {
              "type": "integer",
              "minimum": 0
            }
          }
        },
        "cost": {
          "type": "number",
          "minimum": 0,
          "description": "Cost in USD"
        },
        "memory_operations": {
          "type": "object",
          "description": "Memory bank operations performed",
          "properties": {
            "kv_reads": {
              "type": "integer",
              "minimum": 0
            },
            "kv_writes": {
              "type": "integer",
              "minimum": 0
            },
            "doc_searches": {
              "type": "integer",
              "minimum": 0
            },
            "doc_writes": {
              "type": "integer",
              "minimum": 0
            },
            "insights_generated": {
              "type": "integer",
              "minimum": 0
            }
          }
        },
        "error": {
          "type": "object",
          "description": "Error details if status is error",
          "properties": {
            "message": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "stack_trace": {
              "type": "string"
            },
            "retry_count": {
              "type": "integer",
              "minimum": 0
            }
          }
        },
        "metadata": {
          "type": "object",
          "description": "Additional metadata",
          "additionalProperties": true
        }
      }
    }
  }
}